apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    // En caso de que el compilador muestre error en la búsqueda de cliente HTTP, descomentar
    // (Problema de Robolectric)
    // useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.edx.shell.android.facebookrecipes"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        /**
         * Definir estas constantes en el archivo gradle.properties. NO SE DEBEN ALMACENAR EN CONTROL DE VERSIONES
         * - FACEBOOK_PROVIDER
         * - FACEBOOK_APP_ID
         * - FOOD_API_KEY
         */
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "FACEBOOK_PROVIDER_AUTH", project.property('FACEBOOK_PROVIDER') + project.property('FACEBOOK_APP_ID')
            resValue "string", "FACEBOOK_APP_ID", project.property('FACEBOOK_APP_ID')
            buildConfigField "String", "FOOD_API_KEY", project.property('FOOD_API_KEY')
        }
        debug {
            resValue "string", "FACEBOOK_PROVIDER_AUTH", project.property('FACEBOOK_PROVIDER') + project.property('FACEBOOK_APP_ID')
            resValue "string", "FACEBOOK_APP_ID", project.property('FACEBOOK_APP_ID')
            buildConfigField "String", "FOOD_API_KEY", project.property('FOOD_API_KEY')
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"

    // Biblioteca RecyclerView
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"

    // Biblioteca de diseño
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    // Biblioteca Facebook
    compile "com.facebook.android:facebook-android-sdk:$rootProject.ext.facebookVersion"

    // Biblioteca Retrofit
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"

    // Biblioteca Glide
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    // Biblioteca ButterKnife
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"

    // Biblioteca Eventbus
    compile "org.greenrobot:eventbus:$rootProject.ext.eventbusVersion"

    // Biblioteca Dagger
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "javax.annotation:jsr250-api:$rootProject.ext.jsr250Version"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"

    // Biblioteca DBFlow
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.ext.dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.ext.dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow:$rootProject.ext.dbflowVersion"

    // Biblioteca Robolectric para todas las pruebas que necesitan algo de Android
    testCompile "org.robolectric:robolectric:$rootProject.ext.roboelectricVersion"

    // Biblioteca Mockito para pruebas de Mocks
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"

    // Biblioteca JUnit para pruebas de Unit Testing
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}
